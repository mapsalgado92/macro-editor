[{"C:\\Users\\portu\\OneDrive\\Documentos\\GitHub\\macro-editor\\src\\App.js":"1","C:\\Users\\portu\\OneDrive\\Documentos\\GitHub\\macro-editor\\src\\index.js":"2","C:\\Users\\portu\\OneDrive\\Documentos\\GitHub\\macro-editor\\src\\SelectButton.js":"3","C:\\Users\\portu\\OneDrive\\Documentos\\GitHub\\macro-editor\\src\\macrosES.js":"4","C:\\Users\\portu\\OneDrive\\Documentos\\GitHub\\macro-editor\\src\\macrosPT.js":"5"},{"size":3394,"mtime":1608795185403,"results":"6","hashOfConfig":"7"},{"size":433,"mtime":1606388038530,"results":"8","hashOfConfig":"7"},{"size":346,"mtime":1606407581641,"results":"9","hashOfConfig":"7"},{"size":12315,"mtime":1608552908316,"results":"10","hashOfConfig":"7"},{"size":12863,"mtime":1608795219632,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"10mys7s",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\portu\\OneDrive\\Documentos\\GitHub\\macro-editor\\src\\App.js",["23"],"import React from 'react';\nimport SelectButton from './SelectButton';\nimport './App.css';\nimport * as macrosES from './macrosES.js';\nimport * as macrosPT from './macrosPT.js'\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      language: \"ES\",\n      selected: \"\",\n      contents: \"\",\n      macros: {\n        general: macrosES.macrosGen,\n        poo: macrosES.macrosPoo,\n        ppn: macrosES.macrosPpn\n      }\n    }\n  }\n\n  handleSelect = (macro) => {\n    this.setState({selected: macro});\n  }\n\n  handleEditEditor = (e) => {\n    this.setState({contents: e.target.value})\n  }\n\n  handleEditViewer = (e) => {\n    this.setState({selected: e.target.value})\n  }\n\n  handleChangeLanguage = (lang) => {\n    let newMacros = {};\n    switch (lang) {\n      case \"ES\":\n        newMacros = {\n          general: macrosES.macrosGen,\n          poo: macrosES.macrosPoo,\n          ppn: macrosES.macrosPpn};\n          break;\n      case \"PT\":\n        newMacros = {\n          general: macrosPT.macrosGen,\n          poo: [],\n          ppn: macrosES.macrosPpn\n        };\n        break;\n      case \"EN\":\n        newMacros = {\n          general: [],\n          poo: [],\n          ppn:macrosES.macrosPpn\n        }\n      default: break;\n    }\n    this.setState({language: lang, macros: newMacros})\n  }\n\n  render () {\n    return(\n    <div className=\"App\">\n      <div id=\"macro-selector\">\n        <div id=\"title-wrapper\">Macro Selector{\" - \" + this.state.language}</div>\n        <div id=\"lang-selector\">\n          <button className=\"lang-button\" onClick={()=>this.handleChangeLanguage(\"ES\")}>ES</button>\n          <button className=\"lang-button\" onClick={()=>this.handleChangeLanguage(\"PT\")}>PT</button>\n          <button className=\"lang-button\" onClick={()=>this.handleChangeLanguage(\"EN\")}>EN</button>\n        </div>\n        {renderMacros(\"General\", this.state.macros.general, this.handleSelect)}\n        {renderMacros(\"Proof of Ownership\", this.state.macros.poo, this.handleSelect)}\n        {renderMacros(\"PPN Modules\", this.state.macros.ppn, this.handleSelect)}\n      </div>\n      <div id=\"viewer-editor\">\n        <div><h5>Macro Viewer</h5></div>\n        <textarea id=\"macro-viewer\" onChange={this.handleEditViewer} value={this.state.selected} />\n        <CopyToClipboard id=\"copy-viewer\" className=\"copy-button\" text={this.state.selected}><button>Copy Macro Viewer</button></CopyToClipboard>\n        <h5 id=\"title\">E-mail Editor</h5>\n        <textarea id=\"editor\" onChange={this.handleEditEditor} placeholder=\"Compose your e-mail here...\"/>\n        <CopyToClipboard id=\"copy-editor\" className=\"copy-button\" text={this.state.contents}><button>Copy E-mail Editor</button></CopyToClipboard>\n      </div>\n    </div>\n    )\n  }\n}\n\nconst renderMacros = (typeStr, macros, hFunc) => {\n  return(\n    <div id={typeStr} className={\"select-type-wrapper\"}>\n      <h5>{typeStr}</h5>\n      <div className={\"select-wrapper\"}>{macros.map((macro)=> <SelectButton macro={macro} handleSelect={hFunc}/>)}</div>\n    </div>\n  )\n}\n\n/*const renderSubworkflowBranch = (subworkflow, hFunc, currentId) => {\n  return (\n    <div>\n      {subworkflow.branch.map((branch, index) => <Branch id={\"b\" + index} condition={branch.condition} targetId={branch.targetId} currentId={currentId} handleBranch={hFunc}/>)}\n    </div>\n  )\n}*/\n\n\nexport default App;\n","C:\\Users\\portu\\OneDrive\\Documentos\\GitHub\\macro-editor\\src\\index.js",[],"C:\\Users\\portu\\OneDrive\\Documentos\\GitHub\\macro-editor\\src\\SelectButton.js",[],"C:\\Users\\portu\\OneDrive\\Documentos\\GitHub\\macro-editor\\src\\macrosES.js",[],"C:\\Users\\portu\\OneDrive\\Documentos\\GitHub\\macro-editor\\src\\macrosPT.js",[],{"ruleId":"24","severity":1,"message":"25","line":57,"column":7,"nodeType":"26","messageId":"27","endLine":57,"endColumn":22},"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default"]